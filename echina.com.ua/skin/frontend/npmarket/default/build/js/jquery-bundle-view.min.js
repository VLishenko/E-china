var BundleProducts=function(a,b){var c=0,d=function(a,b){if(this.defaults={},this.settings=$.extend({},this,this.defaults,b),this.$el=$(a),this.BUNDLE_DATA={checkedProductsSum:0,checkedProductsOldSum:0,checkedProductsCount:0},this.$totalCount=$(".js-bundle-total-count",this.$el),this.$totalSum=$(".js-bundle-total-sum",this.$el),this.$totalOldSum=$(".js-bundle-total-sum_old",this.$el),this.$totalDiscount=$(".js-bundle-total-discount",this.$el),!this.$totalCount.length)throw new Error("You must declare element with css class .js-bundle-total-count for checked product amount");if(!this.$totalSum.length)throw new Error("You must declare element with css class .js-bundle-total-sum for checked product summ");if(!this.$totalOldSum.length)throw new Error("You must declare element with css class .js-bundle-total-sum for checked product old summ");if(!this.$totalDiscount.length)throw new Error("You must declare element with css class .js-bundle-total-sum for checked product discount");this.instanceUid=c++};return d}();BundleProducts.prototype.init=function(){var a=this;this.initCheckboxes(),this.updateOrderData();var b=this.$el.find(".js-bundle-icon").on("click.bundleProducts",function(){a.checkCheckbox(this)});if(!b.length)throw new Error("You must declare checkboxes with css class js-bundle-icon");$(".js-bundle-item",this.$el).each(function(b,c){a.initCheckboxes(c)})},BundleProducts.prototype.isChecked=function(a){var b=$(a).find("input").attr("checked");return"checked"==b},BundleProducts.prototype.initCheckboxes=function(a){this.productIsSelected(a,!0)},BundleProducts.prototype.checkCheckbox=function(a){var b=$(a).closest(".js-bundle-item");if(!b.length)throw new Error(".js-bundle-item block for this checkbox not found. Declare parent block for all checkboxes with css class .js-bundle-item");this.productIsSelected(b),this.updateOrderData()},BundleProducts.prototype.productIsSelected=function(a,b){function c(){$(a).find(".js-bundle-icon").addClass("checked"),$(a).find(".js-bundle-checkbox").attr("checked",!0),$(a).find(".js-bundle-product").removeClass("not-selected")}function d(){$(a).find(".js-bundle-icon").removeClass("checked"),$(a).find(".js-bundle-checkbox").attr("checked",!1),$(a).find(".js-bundle-product").addClass("not-selected")}if(b)this.isChecked(a)?c():d();else if(this.isChecked(a)){if(this.BUNDLE_DATA.checkedProductsCount<=2)return;d()}else c()},BundleProducts.prototype.updateOrderData=function(){var a=this,b=$(".js-bundle-item",this.$el),c=0,d=0,e=0;b.each(function(){if(a.isChecked(this)){var b=parseFloat($(this).data("price")),f=parseFloat($(this).data("old-price"));d+=b,e+=f,c++}}),this.BUNDLE_DATA.checkedProductsSum=d,this.BUNDLE_DATA.checkedProductsOldSum=e,this.BUNDLE_DATA.checkedProductsCount=c;var f=this.splitSum(d),g=this.splitSum(e),h=this.calculateDiscount(d,e);this.$totalCount.text(c),this.$totalSum.text(f),this.$totalOldSum.text(g),this.$totalDiscount.text(h)},BundleProducts.prototype.splitSum=function(a){var a=Math.round(100*a)/100;return a=a.toString().replace(/(\d)(?=(\d\d\d)+([^\d]|$))/g,"$1 "),a=a.replace(".",",")},BundleProducts.prototype.calculateDiscount=function(a,b){return(100-a/b*100).toFixed()},$.fn.BundleProducts=function(a){return this.each(function(b,c){c.BundleProducts=new BundleProducts(c,a).init()})};