function NotifyService(a,b,c,d){if(this.message=a,this.type=b,this.notifyBlock=null,this.el=c,this.position={},this.defaults={visibleLatency:2500,$messageCotainer:$("body")},!a)throw new Error("NotifyService() expect message parameter (string)")}NotifyService.prototype.setVisibilityLatency=function(a){if("number"!=typeof a)throw new Error("setVisibilityLatency(time) expect time - type Number");self.visibleLatency=a},NotifyService.prototype.setPosition=function(a,b){this.position.top=b,this.position.left=a},NotifyService.prototype.setMessageContainer=function(a){this.$messageCotainer=a},NotifyService.prototype.createNotification=function(){var a,b=this;switch(b.type){case"success":a="notify-message--success";break;case"error":a="notify-message--fail";break;case"warning":a="notify-message--warning";break;default:a="notify-message--warning"}b.$notifyBlock=$("<div/>",{class:"notify-message "+(a||""),text:b.message});var c={x:this.position.top?this.position.top:0,y:this.position.left?this.position.left:0};b.$notifyBlock.css({left:c.x,top:c.y})},NotifyService.prototype.showMessage=function(){var a=this;this.createNotification(),this.$messageCotainer?this.$messageCotainer.append(a.$notifyBlock):this.defaults.$messageCotainer.append(a.$notifyBlock),a.visibleLatency?setTimeout(this.hideMessage.bind(this),a.visibleLatency):setTimeout(this.hideMessage.bind(this),a.defaults.visibleLatency)},NotifyService.prototype.hideMessage=function(){this.$notifyBlock.remove()};