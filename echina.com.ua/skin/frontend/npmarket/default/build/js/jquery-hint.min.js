!function($){"use strict";var a=function(a,b){this.hParam=$.extend({},$.fn.customHint.defaults,b||{}),this.$element=$(a),this.options=this.$element.data("hint").options,this.position=this.options.position,this.text=this.options.text,this.hint=null,this.init()};a.prototype={constructor:a,init:function(){return this.$element.css({position:"relative"}),this.create(),"true"==this.options.visible?void this.show():void this.initEvents()},initEvents:function(){var a=this;this.$element.hover(function(){a.show()},function(){a.hide()})},show:function(){this.hint.css({visibility:"visible",opacity:1})},hide:function(){this.hint.css({visibility:"hidden",opacity:0})},create:function(){this.hint=$("<div/>"),this.hint.addClass(this.hParam.designClass+" "+this.position).css("visibility","hidden").html(this.text),this.$element.append(this.hint),this.hint.css("margin-left",-(this.hint.outerWidth()/2)),this.hParam.hasOwnProperty("afterCreate")&&this.hParam.afterCreate(this.$element,this.hint)}},$.fn.customHint=function(b){var c=$(this),d=c.data("CustomHint"),e="object"==typeof b&&b;return this.each(function(){return $.data(this,"CustomHint")||$.data(this,"CustomHint",d=new a(this,e)),"string"==typeof b&&d[b](),this})},$.fn.customHint.defaults={event:"hover",designClass:"custom-hint",visibleAlways:!1,afterCreate:function(a,b){}},$.fn.customHint.constructor=a}(jQuery);